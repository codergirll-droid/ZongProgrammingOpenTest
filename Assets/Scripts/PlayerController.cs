using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerController : MonoBehaviour
{
    [SerializeField] float _speed = 5.0f;
    [SerializeField] float _mouseSensitivity = 2.0f;

    float _rotation = 0f;
    Rigidbody _rb;

    float _horizontalMovement;
    float _verticalMovement;
    Vector3 _movement;
    Vector3 _velocityVector;

    float _mouseX;
    float _mouseY;

    public Camera playerCam;

    bool _disablePlayerControls = false;

    public static PlayerController Instance;

    private void Awake()
    {
        if(Instance == null)
        {
            Instance = this;
        }
        else
        {
            Destroy(this);
        }
    }

    void Start()
    {
        _movement = new Vector3();
        _velocityVector = new Vector3();
        _rb= GetComponent<Rigidbody>();
        Cursor.lockState = CursorLockMode.Locked;
        Cursor.visible = false;
    }


    void Update()
    {
        if (_disablePlayerControls)
            return;

        _horizontalMovement = Input.GetAxisRaw("Horizontal");
        _verticalMovement = Input.GetAxisRaw("Vertical");

        _mouseX = Input.GetAxisRaw("Mouse X") * _mouseSensitivity;
        _mouseY = Input.GetAxisRaw("Mouse Y") * _mouseSensitivity;

        _movement = transform.forward * _verticalMovement + transform.right * _horizontalMovement;
        _movement.Normalize();

        _velocityVector.x = _movement.x * _speed;
        _velocityVector.y = _rb.velocity.y;
        _velocityVector.z = _movement.z * _speed;

        _rb.velocity = _velocityVector;

        _rotation -= _mouseY;
        _rotation = Mathf.Clamp(_rotation, -90f, 90f);

        transform.Rotate(Vector3.up * _mouseX);
        playerCam.transform.localRotation = Quaternion.Euler(_rotation, 0f, 0f);

    }

    public void DisablePlayerControls(bool disabled)
    {

        if (disabled)
        {
            Cursor.lockState = CursorLockMode.None;
            Cursor.visible = true;
        }
        else
        {
            Cursor.lockState = CursorLockMode.Locked;
            Cursor.visible = false;
        }

        _disablePlayerControls = disabled;

    }
}
